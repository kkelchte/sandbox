<?xml version="1.0"?>
<launch>
	<!--Read data parameters from yaml file-->
	<rosparam command="load" file="$(find sandbox)/parameters/online_param.yaml" />
  <arg name="starting_height" default="1"/>
  <param name="starting_height" value="$(arg starting_height)"/>
  <arg name="log_file" default="/home/klaas/tmp/log"/>
  <param name="log_file" value="$(arg log_file)"/>
  <arg name="eva_dis" default="3300"/>
  <param name="eva_dis" value="$(arg eva_dis)"/>
  <!-- <arg name="saving_location" default="/home/klaas/tmp"/>
  <param name="saving_location" value="$(arg saving_location)"/>-->
  <arg name="current_world" default="esat_corridor/0000000000.world"/>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
  <!--use line for spawning world from .dae mesh in gz model folder-->
  <arg name="world_name" value="$(find sandbox)/worlds/$(arg current_world)"/>
	<arg name="gui" default="false"/>
  <arg name="headless" default="false"/> 
  </include>
  <param name='world_name' value="$(arg current_world)"/>
	
	<!--drone flies in +x or -x direction-->
  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="Yspawned" default="1.57"/>
    
	<!-- Spawn simulated quadrotor uav -->
  <include file="$(find cvg_sim_gazebo)/launch/spawn_quadrotor.launch" >
		<!--adjust spawning position of drone-->
    <arg name="x" value="$(arg x)"/>
    <arg name="y" value="$(arg y)"/>
    <arg name="Y" value="$(arg Yspawned)"/>
	  <arg name="model" value="$(find cvg_sim_gazebo)/urdf/quadrotor_sensors.urdf.xacro"/>		
  </include>
	
	<arg name="supervision" default="true"/> 
  <param name="supervision" value="$(arg supervision)"/>

  <!-- start evaluation-->
  <node name="show_control" pkg="sandbox" type="show_control.py" output="screen"/>
  <node name="show_depth_prediction" pkg="sandbox" type="show_depth_prediction.py" output="screen"/>

	<!-- start behavior arbitration-->
  <param name="ba_parameters_path" value="/home/klaas/sandbox_ws/src/sandbox/parameters/behavior_arbitration.xml"/>
  <node name="teleop_autopilot_behaviour_arbitration" pkg="sandbox" type="teleop_autopilot_behaviour_arbitration" output="log" />
	<!-- start creation of dataset-->
	<!--<node name="create_dataset" pkg="create_dataset" type="create_dataset.py"/>-->
	<!-- start evaluation-->
	<node name="evaluate" pkg="sandbox" type="evaluate.py" output="screen"/>

</launch>

ARGUMENTS
current_world		--> world in folder /home/jay/autopilot_ws/src/autopilot/worlds
spawn_yaw		--> yaw direction of spawned drone
spawn_x			--> x position of spawned drone
sloc			--> saving location for images in folder /home/jay/data
sloc_log		--> saving location for log file in full path
goal_angle		--> direction drone should go to next waypoint
mode			--> mode of evaluating the task: reach goal north (default, 0), west (1), east(2)
last_control_output	--> first control index number online control is listening to -1
dagger_running		--> publish expert control on dagger_vel topic if true and on cmd_vel if false
starting_height		--> adjust the height from where the control should start
save_depth		--> save depth images and rgb images from kinect
save_recover		--> save recovery rgb images from left and right looking camera.
port			--> port number to which socket needs to listen
online_control	--> true if network is flying, false otherwise (>avoids online control to interfere)

PARAMS
world_name		--> world in folder /home/jay/autopilot_ws/src/autopilot/worlds
saving_location		--> location for images in folder /home/jay/data
saving_location_log	--> saving location for log file in full path
goal_angle		--> direction drone should go to next waypoint
evaluation_mode		--> mode of evaluating the task: reach goal north (default, 0), west (1), east(2)
last_control_output	--> first control index number online control is listening to -1
dagger_running		--> publish expert control on dagger_vel topic if true and on cmd_vel if false
starting_height		--> adjust the height from where the control should start 
save_depth		--> save depth images and rgb images from kinect
save_recover		--> save recovery rgb images from left and right looking camera.
depth_TCP_port 	--> port number to which socket needs to listen
online_control	--> true if network is flying, false otherwise (>avoids online control to interfere)
